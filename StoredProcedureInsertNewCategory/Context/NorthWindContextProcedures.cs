// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using System;
using System.Data;
using System.Threading.Tasks;
using StoredProcedureInsertNewCategory.Models;

namespace StoredProcedureInsertNewCategory.Context
{
    public partial class NorthWindContextProcedures
    {
        private readonly NorthWindContext _context;

        public NorthWindContextProcedures(NorthWindContext context)
        {
            _context = context;
        }

        public async Task<int> sp_upgraddiagrams()
        {
            return await _context.Database.ExecuteSqlRawAsync("EXEC [dbo].[sp_upgraddiagrams]");
        }

        public async Task<uspCustomersByCountryIdentifierResult[]> uspCustomersByCountryIdentifier(int? CountryIdentifier)
        {
            var parameterCountryIdentifier = new SqlParameter
            {
                ParameterName = "CountryIdentifier",
                Precision = 10,
                Size = 4,
                SqlDbType = System.Data.SqlDbType.Int,
                Value = CountryIdentifier,
            };

            var result = await _context.SqlQuery<uspCustomersByCountryIdentifierResult>("EXEC [dbo].[uspCustomersByCountryIdentifier] @CountryIdentifier  ",parameterCountryIdentifier);

            return result;
        }

        public async Task<uspGenerateClassResult[]> uspGenerateClass(string TableName,string ClassInformation, OutputParameter<string> Result)
        {
            var parameterTableName = new SqlParameter
            {
                ParameterName = "TableName",
                Precision = 128,
                Size = 256,
                SqlDbType = System.Data.SqlDbType.NVarChar,
                Value = TableName,
            };

            var parameterResult = new SqlParameter
            {
                ParameterName = "Result",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.NVarChar,
                Value = Result,
            };

            var parameterClassInformation = new SqlParameter
            {
                ParameterName = "ClassInformation",
                SqlDbType = System.Data.SqlDbType.NVarChar,
                Value = ClassInformation,
            };

            var result = await _context.SqlQuery<uspGenerateClassResult>("EXEC [dbo].[uspGenerateClass] @TableName,@ClassInformation, @Result OUTPUT ",parameterTableName,parameterResult,parameterClassInformation);

            Result.SetValueInternal(parameterResult.Value);
            return result;
        }

        public async Task<uspGetCustomers1Result[]> uspGetCustomers1()
        {
            var result = await _context.SqlQuery<uspGetCustomers1Result>("EXEC [dbo].[uspGetCustomers1]");

            return result;
        }
    }
}
